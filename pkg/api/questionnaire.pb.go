// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: questionnaire.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request string `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *TestRequest) Reset() {
	*x = TestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRequest) ProtoMessage() {}

func (x *TestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRequest.ProtoReflect.Descriptor instead.
func (*TestRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{0}
}

func (x *TestRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

type TestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{1}
}

func (x *TestResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type Survey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                    `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Title                   string                    `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Ref                     string                    `protobuf:"bytes,3,opt,name=Ref,proto3" json:"Ref,omitempty"`
	Questions               []*Question               `protobuf:"bytes,4,rep,name=Questions,proto3" json:"Questions,omitempty"`
	RadioPossibleAnswers    []*RadioPossibleAnswer    `protobuf:"bytes,5,rep,name=RadioPossibleAnswers,proto3" json:"RadioPossibleAnswers,omitempty"`
	CheckboxPossibleAnswers []*CheckboxPossibleAnswer `protobuf:"bytes,6,rep,name=CheckboxPossibleAnswers,proto3" json:"CheckboxPossibleAnswers,omitempty"`
	TextPossibleAnswers     []*TextPossibleAnswer     `protobuf:"bytes,7,rep,name=TextPossibleAnswers,proto3" json:"TextPossibleAnswers,omitempty"`
}

func (x *Survey) Reset() {
	*x = Survey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Survey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Survey) ProtoMessage() {}

func (x *Survey) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Survey.ProtoReflect.Descriptor instead.
func (*Survey) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{2}
}

func (x *Survey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Survey) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Survey) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Survey) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *Survey) GetRadioPossibleAnswers() []*RadioPossibleAnswer {
	if x != nil {
		return x.RadioPossibleAnswers
	}
	return nil
}

func (x *Survey) GetCheckboxPossibleAnswers() []*CheckboxPossibleAnswer {
	if x != nil {
		return x.CheckboxPossibleAnswers
	}
	return nil
}

func (x *Survey) GetTextPossibleAnswers() []*TextPossibleAnswer {
	if x != nil {
		return x.TextPossibleAnswers
	}
	return nil
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	QuestionnaireId string `protobuf:"bytes,2,opt,name=QuestionnaireId,proto3" json:"QuestionnaireId,omitempty"`
	Text            string `protobuf:"bytes,3,opt,name=Text,proto3" json:"Text,omitempty"`
	Order           string `protobuf:"bytes,4,opt,name=Order,proto3" json:"Order,omitempty"`
	Kind            string `protobuf:"bytes,5,opt,name=Kind,proto3" json:"Kind,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{3}
}

func (x *Question) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Question) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *Question) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Question) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *Question) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type RadioPossibleAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Text       string `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
	QuestionId string `protobuf:"bytes,3,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
}

func (x *RadioPossibleAnswer) Reset() {
	*x = RadioPossibleAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioPossibleAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioPossibleAnswer) ProtoMessage() {}

func (x *RadioPossibleAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioPossibleAnswer.ProtoReflect.Descriptor instead.
func (*RadioPossibleAnswer) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{4}
}

func (x *RadioPossibleAnswer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RadioPossibleAnswer) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RadioPossibleAnswer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

type CheckboxPossibleAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Text       string `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
	QuestionId string `protobuf:"bytes,3,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
}

func (x *CheckboxPossibleAnswer) Reset() {
	*x = CheckboxPossibleAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckboxPossibleAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckboxPossibleAnswer) ProtoMessage() {}

func (x *CheckboxPossibleAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckboxPossibleAnswer.ProtoReflect.Descriptor instead.
func (*CheckboxPossibleAnswer) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{5}
}

func (x *CheckboxPossibleAnswer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckboxPossibleAnswer) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CheckboxPossibleAnswer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

type TextPossibleAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Text        string `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
	QuestionId  string `protobuf:"bytes,3,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	Placeholder string `protobuf:"bytes,4,opt,name=Placeholder,proto3" json:"Placeholder,omitempty"`
}

func (x *TextPossibleAnswer) Reset() {
	*x = TextPossibleAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextPossibleAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextPossibleAnswer) ProtoMessage() {}

func (x *TextPossibleAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextPossibleAnswer.ProtoReflect.Descriptor instead.
func (*TextPossibleAnswer) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{6}
}

func (x *TextPossibleAnswer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TextPossibleAnswer) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextPossibleAnswer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *TextPossibleAnswer) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

type RadioAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	QuestionnaireId     string `protobuf:"bytes,2,opt,name=QuestionnaireId,proto3" json:"QuestionnaireId,omitempty"`
	QuestionId          string `protobuf:"bytes,3,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	RadioPossibleAnswer string `protobuf:"bytes,4,opt,name=RadioPossibleAnswer,proto3" json:"RadioPossibleAnswer,omitempty"`
}

func (x *RadioAnswer) Reset() {
	*x = RadioAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioAnswer) ProtoMessage() {}

func (x *RadioAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioAnswer.ProtoReflect.Descriptor instead.
func (*RadioAnswer) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{7}
}

func (x *RadioAnswer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RadioAnswer) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *RadioAnswer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *RadioAnswer) GetRadioPossibleAnswer() string {
	if x != nil {
		return x.RadioPossibleAnswer
	}
	return ""
}

type CheckboxAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	QuestionnaireId        string `protobuf:"bytes,2,opt,name=QuestionnaireId,proto3" json:"QuestionnaireId,omitempty"`
	QuestionId             string `protobuf:"bytes,3,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	CheckboxPossibleAnswer string `protobuf:"bytes,4,opt,name=CheckboxPossibleAnswer,proto3" json:"CheckboxPossibleAnswer,omitempty"`
}

func (x *CheckboxAnswer) Reset() {
	*x = CheckboxAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckboxAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckboxAnswer) ProtoMessage() {}

func (x *CheckboxAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckboxAnswer.ProtoReflect.Descriptor instead.
func (*CheckboxAnswer) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{8}
}

func (x *CheckboxAnswer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckboxAnswer) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *CheckboxAnswer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *CheckboxAnswer) GetCheckboxPossibleAnswer() string {
	if x != nil {
		return x.CheckboxPossibleAnswer
	}
	return ""
}

type TextAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Answer             string `protobuf:"bytes,2,opt,name=Answer,proto3" json:"Answer,omitempty"`
	QuestionnaireId    string `protobuf:"bytes,3,opt,name=QuestionnaireId,proto3" json:"QuestionnaireId,omitempty"`
	QuestionId         string `protobuf:"bytes,4,opt,name=QuestionId,proto3" json:"QuestionId,omitempty"`
	TextPossibleAnswer string `protobuf:"bytes,5,opt,name=TextPossibleAnswer,proto3" json:"TextPossibleAnswer,omitempty"`
}

func (x *TextAnswer) Reset() {
	*x = TextAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextAnswer) ProtoMessage() {}

func (x *TextAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextAnswer.ProtoReflect.Descriptor instead.
func (*TextAnswer) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{9}
}

func (x *TextAnswer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TextAnswer) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *TextAnswer) GetQuestionnaireId() string {
	if x != nil {
		return x.QuestionnaireId
	}
	return ""
}

func (x *TextAnswer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *TextAnswer) GetTextPossibleAnswer() string {
	if x != nil {
		return x.TextPossibleAnswer
	}
	return ""
}

type GetSurveyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetSurveyRequest) Reset() {
	*x = GetSurveyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSurveyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSurveyRequest) ProtoMessage() {}

func (x *GetSurveyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSurveyRequest.ProtoReflect.Descriptor instead.
func (*GetSurveyRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{10}
}

func (x *GetSurveyRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type GetSurveyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Survey *Survey `protobuf:"bytes,1,opt,name=survey,proto3" json:"survey,omitempty"`
}

func (x *GetSurveyResponse) Reset() {
	*x = GetSurveyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSurveyResponse) ProtoMessage() {}

func (x *GetSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSurveyResponse.ProtoReflect.Descriptor instead.
func (*GetSurveyResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{11}
}

func (x *GetSurveyResponse) GetSurvey() *Survey {
	if x != nil {
		return x.Survey
	}
	return nil
}

type CreateSurveyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Survey *Survey `protobuf:"bytes,1,opt,name=survey,proto3" json:"survey,omitempty"`
}

func (x *CreateSurveyRequest) Reset() {
	*x = CreateSurveyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSurveyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSurveyRequest) ProtoMessage() {}

func (x *CreateSurveyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSurveyRequest.ProtoReflect.Descriptor instead.
func (*CreateSurveyRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{12}
}

func (x *CreateSurveyRequest) GetSurvey() *Survey {
	if x != nil {
		return x.Survey
	}
	return nil
}

type CreateSurveyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Ref    string `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *CreateSurveyResponse) Reset() {
	*x = CreateSurveyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSurveyResponse) ProtoMessage() {}

func (x *CreateSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSurveyResponse.ProtoReflect.Descriptor instead.
func (*CreateSurveyResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{13}
}

func (x *CreateSurveyResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *CreateSurveyResponse) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type UpdateSurveyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Survey *Survey `protobuf:"bytes,1,opt,name=survey,proto3" json:"survey,omitempty"`
}

func (x *UpdateSurveyRequest) Reset() {
	*x = UpdateSurveyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSurveyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSurveyRequest) ProtoMessage() {}

func (x *UpdateSurveyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSurveyRequest.ProtoReflect.Descriptor instead.
func (*UpdateSurveyRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSurveyRequest) GetSurvey() *Survey {
	if x != nil {
		return x.Survey
	}
	return nil
}

type UpdateSurveyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateSurveyResponse) Reset() {
	*x = UpdateSurveyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSurveyResponse) ProtoMessage() {}

func (x *UpdateSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSurveyResponse.ProtoReflect.Descriptor instead.
func (*UpdateSurveyResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateSurveyResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteSurveyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *DeleteSurveyRequest) Reset() {
	*x = DeleteSurveyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSurveyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSurveyRequest) ProtoMessage() {}

func (x *DeleteSurveyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSurveyRequest.ProtoReflect.Descriptor instead.
func (*DeleteSurveyRequest) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSurveyRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type DeleteSurveyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteSurveyResponse) Reset() {
	*x = DeleteSurveyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_questionnaire_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSurveyResponse) ProtoMessage() {}

func (x *DeleteSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_questionnaire_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSurveyResponse.ProtoReflect.Descriptor instead.
func (*DeleteSurveyResponse) Descriptor() ([]byte, []int) {
	return file_questionnaire_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteSurveyResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_questionnaire_proto protoreflect.FileDescriptor

var file_questionnaire_proto_rawDesc = []byte{
	0x0a, 0x13, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x27, 0x0a, 0x0b, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdd, 0x02, 0x0a, 0x06,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x52, 0x65, 0x66, 0x12, 0x2b,
	0x0a, 0x09, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x52,
	0x61, 0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x61, 0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x14, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x55, 0x0a, 0x17, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x62, 0x6f, 0x78, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f,
	0x78, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x12, 0x49, 0x0a, 0x13, 0x54, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x13, 0x54, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x08,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x4b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4b, 0x69, 0x6e, 0x64,
	0x22, 0x59, 0x0a, 0x13, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x16, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x12, 0x54, 0x65, 0x78,
	0x74, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x13, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x52, 0x61,
	0x64, 0x69, 0x6f, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x65, 0x78, 0x74, 0x50,
	0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x54, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x38, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52,
	0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x22, 0x3a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x06, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x3a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x22, 0x2e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x2e, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xd1, 0x02, 0x0a, 0x0d, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f,
	0x5a, 0x0d, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_questionnaire_proto_rawDescOnce sync.Once
	file_questionnaire_proto_rawDescData = file_questionnaire_proto_rawDesc
)

func file_questionnaire_proto_rawDescGZIP() []byte {
	file_questionnaire_proto_rawDescOnce.Do(func() {
		file_questionnaire_proto_rawDescData = protoimpl.X.CompressGZIP(file_questionnaire_proto_rawDescData)
	})
	return file_questionnaire_proto_rawDescData
}

var file_questionnaire_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_questionnaire_proto_goTypes = []interface{}{
	(*TestRequest)(nil),            // 0: api.TestRequest
	(*TestResponse)(nil),           // 1: api.TestResponse
	(*Survey)(nil),                 // 2: api.Survey
	(*Question)(nil),               // 3: api.Question
	(*RadioPossibleAnswer)(nil),    // 4: api.RadioPossibleAnswer
	(*CheckboxPossibleAnswer)(nil), // 5: api.CheckboxPossibleAnswer
	(*TextPossibleAnswer)(nil),     // 6: api.TextPossibleAnswer
	(*RadioAnswer)(nil),            // 7: api.RadioAnswer
	(*CheckboxAnswer)(nil),         // 8: api.CheckboxAnswer
	(*TextAnswer)(nil),             // 9: api.TextAnswer
	(*GetSurveyRequest)(nil),       // 10: api.GetSurveyRequest
	(*GetSurveyResponse)(nil),      // 11: api.GetSurveyResponse
	(*CreateSurveyRequest)(nil),    // 12: api.CreateSurveyRequest
	(*CreateSurveyResponse)(nil),   // 13: api.CreateSurveyResponse
	(*UpdateSurveyRequest)(nil),    // 14: api.UpdateSurveyRequest
	(*UpdateSurveyResponse)(nil),   // 15: api.UpdateSurveyResponse
	(*DeleteSurveyRequest)(nil),    // 16: api.DeleteSurveyRequest
	(*DeleteSurveyResponse)(nil),   // 17: api.DeleteSurveyResponse
}
var file_questionnaire_proto_depIdxs = []int32{
	3,  // 0: api.Survey.Questions:type_name -> api.Question
	4,  // 1: api.Survey.RadioPossibleAnswers:type_name -> api.RadioPossibleAnswer
	5,  // 2: api.Survey.CheckboxPossibleAnswers:type_name -> api.CheckboxPossibleAnswer
	6,  // 3: api.Survey.TextPossibleAnswers:type_name -> api.TextPossibleAnswer
	2,  // 4: api.GetSurveyResponse.survey:type_name -> api.Survey
	2,  // 5: api.CreateSurveyRequest.survey:type_name -> api.Survey
	2,  // 6: api.UpdateSurveyRequest.survey:type_name -> api.Survey
	0,  // 7: api.Questionnaire.Test:input_type -> api.TestRequest
	10, // 8: api.Questionnaire.GetSurvey:input_type -> api.GetSurveyRequest
	12, // 9: api.Questionnaire.CreateSurvey:input_type -> api.CreateSurveyRequest
	14, // 10: api.Questionnaire.UpdateSurvey:input_type -> api.UpdateSurveyRequest
	16, // 11: api.Questionnaire.DeleteSurvey:input_type -> api.DeleteSurveyRequest
	1,  // 12: api.Questionnaire.Test:output_type -> api.TestResponse
	11, // 13: api.Questionnaire.GetSurvey:output_type -> api.GetSurveyResponse
	13, // 14: api.Questionnaire.CreateSurvey:output_type -> api.CreateSurveyResponse
	15, // 15: api.Questionnaire.UpdateSurvey:output_type -> api.UpdateSurveyResponse
	17, // 16: api.Questionnaire.DeleteSurvey:output_type -> api.DeleteSurveyResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_questionnaire_proto_init() }
func file_questionnaire_proto_init() {
	if File_questionnaire_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_questionnaire_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Survey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioPossibleAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckboxPossibleAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextPossibleAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckboxAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSurveyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSurveyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSurveyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSurveyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSurveyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSurveyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSurveyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_questionnaire_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSurveyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_questionnaire_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_questionnaire_proto_goTypes,
		DependencyIndexes: file_questionnaire_proto_depIdxs,
		MessageInfos:      file_questionnaire_proto_msgTypes,
	}.Build()
	File_questionnaire_proto = out.File
	file_questionnaire_proto_rawDesc = nil
	file_questionnaire_proto_goTypes = nil
	file_questionnaire_proto_depIdxs = nil
}
